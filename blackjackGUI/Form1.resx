<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IbcAAAAASUVORK5CYII=
</value>
  </data>
</root>