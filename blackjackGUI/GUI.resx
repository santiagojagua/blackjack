<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>